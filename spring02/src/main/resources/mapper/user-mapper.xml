<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring02.mapper.UserMapper">
    <!-- 매퍼의 namespace는 매퍼 인터페이스의 패키지/인터페이스 이름과 같게. -->

    <!-- com.example.spring02.mapper.UserMapper 인터페이스의 select() 메서드가
    사용하게 될 SQL 문장. 인터페이스의 메서드 이름과 동일하게 id를 설정. -->
    <select id="select" resultType="com.example.spring02.domain.User">
        select * from USERS order by ID desc
    </select>
    
    <insert id="insert">
        insert into USERS (USERNAME, PASSWORD, EMAIL)
        values (#{userName}, #{passWord}, #{email})
    </insert>
    
    <select id="selectById" resultType="com.example.spring02.domain.User">
        select * from USERS where ID = #{id}
    </select>
    
    <update id="update">
        update USERS
        set USERNAME = #{userName}, PASSWORD = #{passWord}, EMAIL = #{email}
        where ID = #{id}
    </update>
    
    <delete id="delete">
        delete from USERS where ID = #{id}
    </delete>

    <select id="selectByIdUserNameAndPassWord" resultType="com.example.spring02.domain.User">
        select * from USERS
        where
        <if test="type == 't'.toString()">
            lower(TITLE) like #{keyword}
        </if>
        <if test="type == 'c'.toString()">
            lower(CONTENT) like #{keyword}
        </if>
        <if test="type == 'tc'.toString()">
            lower(TITLE) like #{keyword}
            or
            lower(CONTENT) like #{keyword}
        </if>
        <if test="type == 'a'.toString()">
            lower(AUTHOR) like #{keyword}
        </if>
        order by ID desc
    </select>
    
    

</mapper>
